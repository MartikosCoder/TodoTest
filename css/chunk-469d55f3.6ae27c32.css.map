{"version":3,"sources":["webpack:///src/views/src/views/Edit.vue"],"names":[],"mappings":"AAuKA,MACA,kBACA,CAEA,YACA,kBACA,CAEA,eACA,YAAA,CACA,SACA,CAEA,sCAEA,YAAA,CACA,sBAAA,CACA,UACA,CAEA,WACA,sBAAA,CACA,YAAA,CACA,WAAA,CACA,sBACA,CAEA,qBACA,QAAA,CACA,qBAAA,CACA,cAAA,CACA,UACA,CAEA,iBACA,kBAAA,CACA,iBAAA,CACA,YAAA,CACA,qBAAA,CACA,SAAA,CACA,cAAA,CACA,aAAA,CACA,eAAA,CACA,iBACA,CAEA,6BACA,UAAA,CACA,UACA,CAEA,2BACA,YACA,CAEA,iCACA,SACA,CAEA,iCACA,kBAAA,CACA,UAAA,CACA,SACA,CAEA,wBACA,eAAA,CACA,cAAA,CACA,yBACA,CAEA,8BACA,4BAAA,CACA,UAAA,CACA,UAAA,CACA,yBAAA,CACA,UACA,CAEA,UACA,kBACA,CAEA,gBACA,kBACA,CAEA,oCACA,sFAGA,YACA,CACA","file":"chunk-469d55f3.6ae27c32.css","sourcesContent":["<template>\n  <section class=\"edit-page\">\n    <div class=\"edit-page__todo\">\n      <div class=\"edit-page__todo__title\">\n        <input type=\"text\" name=\"title\" id=\"title\" :value=\"active_todo.title\" @blur=\"saveTitle\" />\n      </div>\n      <section class=\"todo__items-block\">\n        <div class=\"edit-page__todo__new-item\">\n          <input\n            type=\"text\"\n            name=\"new_item\"\n            id=\"new_item\"\n            placeholder=\"New task\"\n            v-model=\"new_description\"\n          />\n          <button class=\"good\" @click=\"addNewItem\">Add</button>\n        </div>\n        <ul class=\"edit-page__todo__items-list\">\n          <ItemEditor\n            class=\"list-item\"\n            v-for=\"item in active_todo.items\"\n            :key=\"item.id\"\n            :id=\"item.id\"\n          />\n        </ul>\n      </section>\n    </div>\n    <div class=\"edit-page__controls flex\">\n      <div class=\"controls__main\">\n        <button class=\"controls__btn back\" @click=\"setConfirmation('discard')\">Back</button>\n        <button class=\"controls__btn danger\" @click=\"setConfirmation('remove')\">Remove</button>\n        <button class=\"controls__btn good\" @click=\"updateTodo\">Save</button>\n      </div>\n      <div class=\"controls__additional\">\n        <button class=\"controls__btn standard\" @click=\"undo\">Undo</button>\n        <button class=\"controls__btn standard\" @click=\"redo\">Redo</button>\n      </div>\n    </div>\n    <section class=\"modal\" :class=\"{flex: modal_is_opened}\">\n      <div class=\"modal_container flex\">\n        <span>Are you sure?</span>\n        <div class=\"modal_panel flex\">\n          <button @click=\"discardCommand\">No</button>\n          <button @click=\"acceptCommand\">Yes</button>\n        </div>\n      </div>\n    </section>\n  </section>\n</template>\n\n<script>\nimport { mapGetters, mapActions } from \"vuex\";\n\nexport default {\n  name: \"Edit\",\n  props: {\n    id: String\n  },\n  data() {\n    return {\n      new_description: \"\",\n      command: null,\n      modal_is_opened: false,\n\n      history: [], // saving states\n      revision: 0, // current position\n      is_moving: false // undo/redo status - true = one of them was called, false = native update\n    };\n  },\n  components: {\n    ItemEditor: () => import(\"../components/Edit/ItemEditor\")\n  },\n  computed: {\n    ...mapGetters([\"all_todos\", \"active_todo\"])\n  },\n  created() {\n    this.setActive(+this.id);\n  },\n  watch: {\n    active_todo: {\n      handler(val) {\n        if (!this.is_moving) {  // If we clicked undo/redo this works\n          const refined_val = JSON.parse(JSON.stringify(val));  // Cloning state revision\n          this.$set(this, \"history\", this.history.slice(0, this.revision)); // Removing all states from future timeline ( for this new branch )\n          this.history.push(refined_val); // Pushing state\n          this.$set(this, \"revision\", this.revision + 1); // Incrementing revision position\n        }\n        this.$set(this, \"is_moving\", false);  // In all cases setting is_moving to false\n      },\n      deep: true\n    }\n  },\n  methods: {\n    ...mapActions([\n      \"setActive\",\n      \"changeTodo\",\n      \"removeTodo\",\n      \"updateActive\",\n      \"clearActive\"\n    ]),\n    addNewItem() {\n      if (this.new_description.length > 0) {\n        const current_id = Math.max(  // Finding last available ID for new item\n          ...this.active_todo.items.map(item => item.id)\n        );\n        this.active_todo.items = [\n          ...this.active_todo.items,\n          {\n            id: current_id > 0 ? current_id + 1 : 1,\n            checked: false,\n            description: this.new_description\n          }\n        ];\n        this.$set(this, \"new_description\", \"\");\n      }\n    },\n    goToMain() {\n      this.$router.push(\"/\");\n    },\n    updateTodo() {\n      this.changeTodo();\n      this.goToMain();\n    },\n    setConfirmation(command) {\n      this.$set(this, \"modal_is_opened\", true);\n      this.$set(this, \"command\", command);\n    },\n    discardCommand() {\n      this.$set(this, \"command\", \"\");\n      this.$set(this, \"modal_is_opened\", false);\n    },\n    acceptCommand() {\n      switch (this.command) {\n        case \"remove\":\n          this.removeTodo(this.active_todo.id);\n          break;\n        case \"discard\":\n          this.clearActive();\n          break;\n      }\n      this.goToMain();\n    },\n    saveTitle(e) {\n      this.$set(this.active_todo, \"title\", e.target.value);\n    },\n    updater() {\n      const updater = { ...this.history[this.revision - 1] }; // Getting selected revision from history\n      this.updateActive(updater); // Updating active_todo\n    },\n    undo() {\n      if (this.revision > 1) {\n        this.$set(this, \"revision\", this.revision - 1);\n        this.$set(this, \"is_moving\", true);\n        this.updater();\n      }\n    },\n    redo() {\n      if (this.revision < this.history.length) {\n        this.$set(this, \"revision\", this.revision + 1);\n        this.$set(this, \"is_moving\", true);\n        this.updater();\n      }\n    }\n  }\n};\n</script>\n<style>\n.back {\n  background: #ff9c5a;\n}\n\n.back:hover {\n  background: #ff8d42;\n}\n\n.controls__btn {\n  padding: 10px;\n  width: 50%;\n}\n\n.controls__main,\n.controls__additional {\n  display: flex;\n  justify-content: center;\n  width: 100%;\n}\n\n.edit-page {\n  align-items: flex-start;\n  display: flex;\n  height: 100%;\n  justify-content: center;\n}\n\n.edit-page__controls {\n  bottom: 0;\n  flex-direction: column;\n  position: fixed;\n  width: 100%;\n}\n\n.edit-page__todo {\n  background: #000074;\n  border-radius: 5px;\n  display: flex;\n  flex-direction: column;\n  margin: 5%;\n  min-height: 75%;\n  min-width: 75%;\n  overflow: hidden;\n  position: relative;\n}\n\n.edit-page__todo__items-list {\n  color: #fff;\n  padding: 5%;\n}\n\n.edit-page__todo__new-item {\n  display: flex;\n}\n\n.edit-page__todo__new-item .good {\n  width: 25%;\n}\n\n.edit-page__todo__new-item input {\n  background: #def4ff;\n  padding: 5%;\n  width: 75%;\n}\n\n.edit-page__todo__title {\n  background: #fff;\n  padding: 8% 10%;\n  text-transform: capitalize;\n}\n\n.edit-page__todo__title input {\n  border-bottom: 1px solid #000;\n  color: #000;\n  padding: 2%;\n  text-transform: capitalize;\n  width: 100%;\n}\n\n.standard {\n  background: #2469ff;\n}\n\n.standard:hover {\n  background: #1d53c9;\n}\n\n@media screen and (min-width: 600px) {\n  .edit-page__todo__title,\n  .edit-page__todo__new-item input,\n  .edit-page__todo__items-list {\n    padding: 20px;\n  }\n}\n</style>"]}